import 'package:hive/hive.dart';

part 'user.g.dart'; // Generated by Hive

@HiveType(typeId: 1)
class User extends HiveObject {
  @HiveField(0)
  String username;

  @HiveField(1)
  String passwordHash;

  @HiveField(2)
  String nama;

  @HiveField(3)
  String email;

  @HiveField(4)
  String phone;

  @HiveField(5)
  String alamat;

  @HiveField(6)
  String profileImage; // URL atau path

  @HiveField(7)
  String saran;

  @HiveField(8)
  String kesan;

  @HiveField(9)
  DateTime createdAt;

  @HiveField(10)
  DateTime updatedAt;

  User({
    required this.username,
    required this.passwordHash,
    this.nama = '',
    this.email = '',
    this.phone = '',
    this.alamat = '',
    this.profileImage = '',
    this.saran = '',
    this.kesan = '',
    DateTime? createdAt,
    DateTime? updatedAt,
  })  : this.createdAt = createdAt ?? DateTime.now(),
        this.updatedAt = updatedAt ?? DateTime.now();

  // Untuk serialisasi JSON jika diperlukan
  Map<String, dynamic> toMap() {
    return {
      'username': username,
      'passwordHash': passwordHash,
      'nama': nama,
      'email': email,
      'phone': phone,
      'alamat': alamat,
      'profileImage': profileImage,
      'saran': saran,
      'kesan': kesan,
      'createdAt': createdAt.toIso8601String(),
      'updatedAt': updatedAt.toIso8601String(),
    };
  }

  factory User.fromMap(Map<String, dynamic> map) {
    return User(
      username: map['username'] ?? '',
      passwordHash: map['passwordHash'] ?? '',
      nama: map['nama'] ?? '',
      email: map['email'] ?? '',
      phone: map['phone'] ?? '',
      alamat: map['alamat'] ?? '',
      profileImage: map['profileImage'] ?? '',
      saran: map['saran'] ?? '',
      kesan: map['kesan'] ?? '',
      createdAt: map['createdAt'] != null ? DateTime.parse(map['createdAt']) : DateTime.now(),
      updatedAt: map['updatedAt'] != null ? DateTime.parse(map['updatedAt']) : DateTime.now(),
    );
  }

  User copyWith({
    String? username,
    String? passwordHash,
    String? nama,
    String? email,
    String? phone,
    String? alamat,
    String? profileImage,
    String? saran,
    String? kesan,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return User(
      username: username ?? this.username,
      passwordHash: passwordHash ?? this.passwordHash,
      nama: nama ?? this.nama,
      email: email ?? this.email,
      phone: phone ?? this.phone,
      alamat: alamat ?? this.alamat,
      profileImage: profileImage ?? this.profileImage,
      saran: saran ?? this.saran,
      kesan: kesan ?? this.kesan,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
    );
  }

  @override
  String toString() {
    return 'User(username: \$username, nama: \$nama, email: \$email, phone: \$phone)';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is User && other.username == username;
  }

  @override
  int get hashCode => username.hashCode;
}
